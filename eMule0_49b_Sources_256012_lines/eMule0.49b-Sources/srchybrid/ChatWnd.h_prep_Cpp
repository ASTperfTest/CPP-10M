//this file is part of eMule
//Copyright (C)2002-2008 Merkur ( strEmail.Format("%s@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the     General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but         ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or         FOR   PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the     General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

void INCLUDEREPLACE(){CX_INCL("INVALID_INCLUDE_FILE_NAME_ResizableLibResizableDialog.h");}
void INCLUDEREPLACE(){CX_INCL("ChatSelector.h");}
void INCLUDEREPLACE(){CX_INCL("FriendListCtrl.h");}
void INCLUDEREPLACE(){CX_INCL("SplitterControl.h");}
void INCLUDEREPLACE(){CX_INCL("IconStatic.h");}
void INCLUDEREPLACE(){CX_INCL("ToolBarCtrlX.h");}

class CSmileySelector;

class CChatWnd :        CResizableDialog
{
 //DECLARE_DYNAMIC(CChatWnd)

public:
 CChatWnd(CWnd* pParent = NULL);   // standard constructor
 virtual ~CChatWnd();

// Dialog Data
 enum { IDD = IDD_CHAT };

 void StartSession(CUpDownClient* client);
 void Localize();
 void UpdateFriendlistCount(unsigned int count);
 void UpdateSelectedFriendMsgDetails();
 void ScrollHistory(bool down);
 void EnableSmileys(bool bEnable)      { chatselector.EnableSmileys(bEnable); }

 CFriendListCtrl m_FriendListCtrl;
 CChatSelector chatselector;

protected:
 friend class CChatSelector;
 void* icon_friend;
 void* icon_msg;
 CSplitterControl m_wndSplitterHorz;
 CIconStatic m_cUserInfo;
 CToolBarCtrlX m_wndFormat;
 CEdit m_wndMessage;
 CButton m_wndSend;
 CButton m_wndClose;
 CSmileySelector *m_pwndSmileySel;

 void SetAllIcons();
 void DoResize(int delta);
 void ShowFriendMsgDetails(CFriend* pFriend);

 virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
 virtual int  OnInitDialog();
 virtual int  PreTranslateMessage(MSG* pMsg);
 virtual int  OnCommand(int *  wParam, long * lParam);
 virtual long *  DefWindowProc(unsigned int message, int *  wParam, long * lParam);


         void OnShowWindow(int  bShow, unsigned int nStatus);
         void OnSysColorChange();
         long *  OnCloseTab(int *  wparam, long * lparam);
         int  OnHelpInfo(HELPINFO* pHelpInfo);
         void OnLvnItemActivateFriendList(NMHDR *pNMHDR, long *  *pResult);
         void OnNMClickFriendList(NMHDR *pNMHDR, long *  *pResult);
         void OnStnDblClickFriendIcon();
         void OnBnClickedSmiley();
         void OnBnClickedClose();
         void OnBnClickedSend();
         void*  OnCtlColor(CDC* pDC, CWnd* pWnd, unsigned int nCtlColor);
};






 