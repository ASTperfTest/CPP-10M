

// GDIThread.h : header file
//

/////////////////////////////////////////////////////////////////////////////
// CGDIThread thread

class CGDIThread :        CWinThread
{
public:
 //DECLARE_DYNAMIC(CGDIThread)
 CGDIThread(CWnd* pWnd, void* hDC);

// Attributes
public:
 void* m_hDC;
 CDC m_dc;
 void * m_hEventKill;
 void * m_hEventDead;
 //static void * m_hAnotherDead;

 // options
 int m_nDelay;
 int m_nScrollInc;
 int  m_bWaitVRT;

 enum {SCROLL_UP = 1, SCROLL_PAUSE = 0, SCROLL_DOWN = -1};

 static CCriticalSection m_csGDILock;

// Operations
public:
 void KillThread();
 virtual void SingleStep() = 0;

// Overrides
 // ClassWizard generated virtual function overrides
 //{{           (CGDIThread)
 //}}           

// Implementation
public:
 int  SetWaitVRT(int  bWait = TRUE);
 int SetScrollDirection(int nDirection);
 int SetDelay(int nDelay);
 virtual ~CGDIThread();
 virtual void Delete();

protected:
 virtual int  InitInstance();

 // Generated message map functions
 //{{       (CGDIThread)
  // NOTE - the ClassWizard will add and remove member functions here.
 //}}       


};






 