
/////////////////////////////////////////////
// written by robert rostek - tecxx@rrs.at //
/////////////////////////////////////////////



class CDirectoryTreeCtrl :        CTreeCtrl
{
 //DECLARE_DYNAMIC(CDirectoryTreeCtrl)

public:
 // initialize control
 void Init(void);
 // get all shared directories
 void GetSharedDirectories(CStringList* list);
 // set shared directories
 void SetSharedDirectories(CStringList* list);

private:
 CImageList m_image;
 // add a neW item
 HTREEITEM AddChildItem(HTREEITEM hRoot, CString strText);
 // add subdirectory items
 void AddSubdirectories(HTREEITEM hRoot, CString strDir);
 // return the full path of an
 CString GetFullPath(HTREEITEM hItem);
 // returns true if strDir has at least one subdirectory
 bool HasSubdirectories(CString strDir);
 // check status of an item has changed
 void CheckChanged(HTREEITEM hItem, bool bChecked);
 // returns true if a subdirectory of strDir is shared
 bool HasSharedSubdirectory(CString strDir);
 // when sharing a directory, make all parent directories bold
 void UpdateParentItems(HTREEITEM hChild);
 void ShareSubDirTree(HTREEITEM hItem, int  bShare);

 // share list access
 bool IsShared(CString strDir);
 void AddShare(CString strDir);
 void DelShare(CString strDir);
 void MarkChilds(HTREEITEM hChild,bool mark);

 CStringList m_lstShared;
 CString m_strLastRightClicked;
 bool m_bSelectSubDirs;

public:
 // construction / destruction
 CDirectoryTreeCtrl();
 virtual ~CDirectoryTreeCtrl();
 virtual int  OnCommand(int *  wParam,long * lParam );

protected:

         void OnTvnItemexpanding(NMHDR *pNMHDR, long *  *pResult);
         void OnTvnGetdispinfo(NMHDR *pNMHDR, long *  *pResult);
         void OnLButtonDown(unsigned int nFlags, CPoint point);
         void OnTvnDeleteItem(NMHDR *pNMHDR, long *  *pResult);
         void OnContextMenu(CWnd* /*pWnd*/, CPoint /*point*/);
         void OnRButtonDown(unsigned int nFlags, CPoint point);
         void OnKeyDown(unsigned int nChar, unsigned int nRepCnt, unsigned int nFlags);
         void OnChar(unsigned int nChar, unsigned int nRepCnt, unsigned int nFlags);
         void OnDestroy();
};






 