//this file is part of eMule
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the     General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but         ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or         FOR   PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the     General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

void INCLUDEREPLACE(){CX_INCL("ResizableLib/ResizablePage.h");}
void INCLUDEREPLACE(){CX_INCL("MuleListCtrl.h");}

 class FCtrlItem_Struct
{
   CString filename;
   uint16 count;
};

class CFileDetailDialogName :        CResizablePage
{
 //DECLARE_DYNAMIC(CFileDetailDialogName)

public:
 CFileDetailDialogName();   // standard constructor
 virtual ~CFileDetailDialogName();

 void SetFiles(const CSimpleArray          * paFiles) { m_paFiles = paFiles; m_bDataChanged = true; }

 // Dialog Data
 enum { IDD = IDD_FILEDETAILS_NAME };

protected:
 CString m_strCaption;
 const CSimpleArray          * m_paFiles;
 bool m_bDataChanged;
 bool m_bAppliedSystemImageList;
 CMuleListCtrl m_listFileNames;
 bool m_bSelf;

 uint32 m_timer;
 int  m_aiColWidths[2];
 int  m_sortindex;
 bool m_sortorder;

 void Localize();
 void RefreshData();
 void FillSourcenameList();
 void Copy();
 bool CanRenameFile() const;
 void RenameFile();

 virtual int  OnInitDialog();
 virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
 virtual int  OnSetActive();
 virtual int  OnApply();

 virtual int  OnCommand(int *  wParam, long * lParam);
 static int          CompareListNameItems(long * lParam1, long * lParam2, long * lParamSort);


         void OnBnClickedButtonStrip();
         void TakeOver();
         void OnLvnColumnclick(NMHDR *pNMHDR, long *  *pResult);
         void OnNMDblclkList(NMHDR *pNMHDR, long *  *pResult);
         void OnNMRclickList(NMHDR *pNMHDR, long *  *pResult);
         void OnTimer(unsigned int nIDEvent);
         void OnDestroy();
         long *  OnDataChanged(int * , long *);
         void OnEnChangeFilename();
};






 