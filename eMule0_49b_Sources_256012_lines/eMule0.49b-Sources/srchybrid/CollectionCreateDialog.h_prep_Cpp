//this file is part of eMule
//Copyright (C)2002-2005 Merkur ( devs@emule-project.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the     General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but         ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or         FOR   PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the     General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

void INCLUDEREPLACE(){CX_INCL("afxcmn.h");}
void INCLUDEREPLACE(){CX_INCL("CollectionListCtrl.h");}
void INCLUDEREPLACE(){CX_INCL("INVALID_INCLUDE_FILE_NAME_ResizableLibResizableDialog.h");}

class CCollection;
class CCollectionFile;

class CCollectionCreateDialog :        CResizableDialog
{
 //DECLARE_DYNAMIC(CCollectionCreateDialog)

public:
 CCollectionCreateDialog(CWnd* pParent = NULL);   // standard constructor
 virtual ~CCollectionCreateDialog();

// Dialog Data
 enum { IDD = IDD_COLLECTIONCREATEDIALOG };

 void SetCollection(CCollection* pCollection, bool create);

protected:
 CCollection* m_pCollection;
 CEdit m_CollectionNameEdit;
 CCollectionListCtrl m_CollectionListCtrl;
 CCollectionListCtrl m_CollectionAvailListCtrl;
 bool m_bSharedFiles;
 CButton m_CollectionViewShareButton;
 CButton m_CollectionCreateFormatCheck;
 void* m_icoWnd;
 void* m_icoForward;
 void* m_icoBack;
 void* m_icoColl;
 void* m_icoFiles;
 bool m_bCreatemode;
 CButton m_AddCollectionButton;
 CButton m_RemoveCollectionButton;
 CStatic m_CollectionListLabel;
 CButton m_SaveButton;
 CButton m_CancelButton;
 CStatic m_CollectionListIcon;
 CStatic m_CollectionSourceListIcon;
 CButton m_CollectionCreateSignNameKeyCheck;

 void AddSelectedFiles(void);
 void RemoveSelectedFiles(void);
 void UpdateAvailFiles(void);

 virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
 virtual int  OnInitDialog(void);


         void OnBnClickedCollectionRemove();
         void OnBnClickedCollectionAdd();
         void OnBnClickedOk();
         void OnBnClickedCollectionViewShared();
         void OnNMDblClkCollectionAvailList(NMHDR *pNMHDR, long *  *pResult);
         void OnNMDblclkCollectionList(NMHDR *pNMHDR, long *  *pResult);
         void OnEnKillFocusCollectionName();
         void OnBnClickedCollectionFormat();
};






 