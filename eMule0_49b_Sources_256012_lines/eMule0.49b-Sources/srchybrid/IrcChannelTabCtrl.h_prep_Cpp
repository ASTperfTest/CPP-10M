//this file is part of eMule
//Copyright (C)2002-2008 Merkur ( strEmail.Format("%s@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the     General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but         ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or         FOR   PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the     General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


void INCLUDEREPLACE(){CX_INCL("ClosableTabCtrl.h");}
void INCLUDEREPLACE(){CX_INCL("HTRichEditCtrl.h");}
void INCLUDEREPLACE(){CX_INCL("SplitterControl.h");}






       Nick;

 class Channel
{
 CString m_sName;
 CString m_sModesA;
 CString m_sModesB;
 CString m_sModesC;
 CString m_sModesD;
 CHTRichEditCtrl m_wndTitle;
 CSplitterControl m_wndSplitter;
 CHTRichEditCtrl m_wndLog;
 CString m_sTitle;
 CTypedPtrList                  m_lstNicks;
 CStringArray m_astrHistory;
 int m_iHistoryPos;
 // Type is mainly so that we can use this for     and the eMule Messages..
 // 1-Status, 2-Channel list, 4-Channel, 5-Private Channel, 6-eMule
 enum EType {
  ctStatus = 1,
  ctChannelList = 2,
  ctNormal = 4,
  ctPrivate = 5
 } m_eType;

 void Show();
 void Hide();
};

class CIrcChannelTabCtrl :        CClosableTabCtrl
{
 //DECLARE_DYNAMIC(CIrcChannelTabCtrl)

public:
 CIrcChannelTabCtrl();
 virtual ~CIrcChannelTabCtrl();

 void Init();
 void Localize();
 Channel* FindChannelByName(const CString& sName);
 Channel* NewChannel(const CString& sName, Channel::EType uType);
 void RemoveChannel(const CString& sChannel);
 void SelectChannel(const Channel *pChannel);
 void DeleteAllChannels();
 bool ChangeChanMode(const CString& sChannel, const CString& sParam, const CString& sDir, const CString& sCommand);
 void ScrollHistory(bool bDown);
 void ChatSend(CString sSend);
 void SetActivity(Channel *pChannel, bool bFlag);
 void EnableSmileys(bool bEnable);

 CString m_sChannelModeSettingsTypeA;
 CString m_sChannelModeSettingsTypeB;
 CString m_sChannelModeSettingsTypeC;
 CString m_sChannelModeSettingsTypeD;
 CTypedPtrList                     m_lstChannels;
 Channel* m_pCurrentChannel;
 Channel* m_pChanStatus;
 Channel* m_pChanList;

protected:
 friend class CIrcWnd;

 CIrcWnd* m_pParent;
 CImageList m_imlistIRC;

 void SetAllIcons();
 int FindChannel(const Channel *pChannel);
 void SelectChannel(int iItem);


         void OnTcnSelChange(NMHDR *pNMHDR, long *  *pResult);
         void OnSysColorChange();
         long *  OnCloseTab(int *  wParam, long * lParam);
         long *  OnQueryTab(int *  wParam, long * lParam);
};






 