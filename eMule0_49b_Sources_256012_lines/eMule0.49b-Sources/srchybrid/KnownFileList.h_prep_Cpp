//this file is part of eMule
//Copyright (C)2002-2008 Merkur ( strEmail.Format("%s@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the     General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but         ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or         FOR   PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the     General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

void INCLUDEREPLACE(){CX_INCL("MapKey.h");}

class CKnownFile;
        CMap<CCKey,const CCKey&,CKnownFile*,CKnownFile*> CKnownFilesMap = "CX_TYPEDEF";
        CMap<CSKey,const CSKey&,int,int> CancelledFilesMap = "CX_TYPEDEF";

class CKnownFileList
{
 friend class CSharedFilesWnd;
 friend class CStatisticFile;
public:
 CKnownFileList();
 ~CKnownFileList();

 bool SafeAddKFile(CKnownFile* toadd);
 bool Init();
 void Save();
 void Clear();
 void Process();

 CKnownFile* FindKnownFile(const char* filename, uint32 date, uint64 size) const;
 CKnownFile* FindKnownFileByID(const uchar* hash) const;
 CKnownFile* FindKnownFileByPath(const CString& sFilePath) const;
 bool IsKnownFile(const CKnownFile* file) const;
 bool IsFilePtrInList(const CKnownFile* file) const;

 void AddCancelledFileID(const uchar* hash);
 bool IsCancelledFileByID(const uchar* hash) const;

 const CKnownFilesMap& GetKnownFiles() const { return m_Files_map; }
 void CopyKnownFileMap(CMap<CCKey,const CCKey&,CKnownFile*,CKnownFile*> &Files_Map);

private:
 bool LoadKnownFiles();
 bool LoadCancelledFiles();

 uint16  requested;
 uint16  accepted;
 uint64  transferred;
 uint32  m_nLastSaved;
 CKnownFilesMap  m_Files_map;
 CancelledFilesMap m_mapCancelledFiles;
 uint32 m_dwCancelledFilesSeed;
};






 