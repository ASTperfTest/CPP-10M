

enum EDebugLogPriority{
 DLP_VERYLOW = 0,
 DLP_LOW,
 DLP_DEFAULT,
 DLP_HIGH,
 DLP_VERYHIGH
};

// Log message type enumeration






// Log message targets flags






void Log(const char* pszLine, ...);
void LogError(const char* pszLine, ...);
void LogWarning(const char* pszLine, ...);

void Log(unsigned int uFlags, const char* pszLine, ...);
void LogError(unsigned int uFlags, const char* pszLine, ...);
void LogWarning(unsigned int uFlags, const char* pszLine, ...);

void DebugLog(const char* pszLine, ...);
void DebugLogError(const char* pszLine, ...);
void DebugLogWarning(const char* pszLine, ...);

void DebugLog(unsigned int uFlags, const char* pszLine, ...);
void DebugLogError(unsigned int uFlags, const char* pszLine, ...);
void DebugLogWarning(unsigned int uFlags, const char* pszLine, ...);

void LogV(unsigned int uFlags, const char* pszFmt, va_list argp);

void AddLogLine(bool bAddToStatusBar, const char* pszLine, ...);
void AddDebugLogLine(bool bAddToStatusBar, const char* pszLine, ...);
void AddDebugLogLine(EDebugLogPriority Priority, bool bAddToStatusBar, const char* pszLine, ...);

void AddLogTextV(unsigned int uFlags, EDebugLogPriority dlpPriority, const char* pszLine, va_list argp);


///////////////////////////////////////////////////////////////////////////////
// CLogFile

enum ELogFileFormat
{
 Unicode = 0,
 Utf8
};

class CLogFile
{
public:
 CLogFile();
 ~CLogFile();

 bool IsOpen() const;
 const CString& GetFilePath() const;
 bool SetFilePath(const char* pszFilePath);
 void SetMaxFileSize(unsigned int uMaxFileSize);
 bool SetFileFormat(ELogFileFormat eFileFormat);

 bool Create(const char* pszFilePath, unsigned int uMaxFileSize = 1024*1024, ELogFileFormat eFileFormat = Unicode);
 bool Open();
 bool Close();
 bool Log(const char* pszMsg, int iLen = -1);
 bool Logf(const char* pszFmt, ...);
 void StartNewLogFile();

protected:
 FILE* m_fp;
 time_t m_tStarted;
 CString m_strFilePath;
 unsigned int m_uBytesWritten;
 unsigned int m_uMaxFileSize;
 bool m_bInOpenCall;
 ELogFileFormat m_eFileFormat;
};

extern CLogFile theLog;
extern CLogFile theVerboseLog;






 